This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.


From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: aquiles2k <aj@elane2k.com>
Date: Wed, 6 Apr 2016 22:39:53 +0300
Subject: [PATCH 2/4] fix error "won't overwrite defined macro" on OSX

See https://github.com/mxe/mxe/issues/1281

diff --git a/m4macros/glib-gettext.m4 b/m4macros/glib-gettext.m4
index 1111111..2222222 100644
--- a/m4macros/glib-gettext.m4
+++ b/m4macros/glib-gettext.m4
@@ -39,8 +39,8 @@ dnl We go to great lengths to make sure that aclocal won't
 dnl try to pull in the installed version of these macros
 dnl when running aclocal in the glib directory.
 dnl
-m4_copy([AC_DEFUN],[glib_DEFUN])
-m4_copy([AC_REQUIRE],[glib_REQUIRE])
+m4_copy_force([AC_DEFUN],[glib_DEFUN])
+m4_copy_force([AC_REQUIRE],[glib_REQUIRE])
 dnl
 dnl At the end, if we're not within glib, we'll define the public
 dnl definitions in terms of our private definitions.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: v1993 <v19930312@gmail.com>
Date: Wed, 8 Dec 2021 20:08:30 +0300
Subject: [PATCH 3/4] Fix gio linking error for some cases

Happens with autotools and direct GCC call, meson doesn't have it.

diff --git a/gio/meson.build b/gio/meson.build
index 1111111..2222222 100644
--- a/gio/meson.build
+++ b/gio/meson.build
@@ -875,7 +875,15 @@ libgio_dep = declare_dependency(link_with : libgio,
   ],
 )
 
+# Link against libuuid to prevent linker error in certain cases
+windows_ldflags = []
+
+if host_system == 'windows'
+  windows_ldflags += ['-luuid']
+endif
+
 pkg.generate(libgio,
+  libraries_private : [windows_ldflags],
   requires : ['glib-2.0', 'gobject-2.0'],
   variables : ['datadir=' + join_paths('${prefix}', get_option('datadir')),
                'schemasdir=' + join_paths('${datadir}', schemas_subdir),

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: v1993 <v19930312@gmail.com>
Date: Wed, 8 Dec 2021 20:45:32 +0300
Subject: [PATCH 4/4] Allow different bindir setting for pkg-config files


diff --git a/gio/meson.build b/gio/meson.build
index 1111111..2222222 100644
--- a/gio/meson.build
+++ b/gio/meson.build
@@ -879,7 +879,7 @@ pkg.generate(libgio,
   requires : ['glib-2.0', 'gobject-2.0'],
   variables : ['datadir=' + join_paths('${prefix}', get_option('datadir')),
                'schemasdir=' + join_paths('${datadir}', schemas_subdir),
-               'bindir=' + join_paths('${prefix}', get_option('bindir')),
+               'bindir=' + join_paths('${prefix}', get_option('runtime_bindir')),
                'giomoduledir=' + pkgconfig_giomodulesdir,
                'gio=' + join_paths('${bindir}', 'gio'),
                'gio_querymodules=@0@'.format(pkgconfig_multiarch_bindir / 'gio-querymodules'),
diff --git a/glib/meson.build b/glib/meson.build
index 1111111..2222222 100644
--- a/glib/meson.build
+++ b/glib/meson.build
@@ -440,7 +440,7 @@ pkg.generate(libglib,
   libraries_private : [win32_ldflags],
   subdirs : ['glib-2.0'],
   extra_cflags : ['-I${libdir}/glib-2.0/include'] + win32_cflags,
-  variables : ['bindir=' + join_paths('${prefix}', get_option('bindir')),
+  variables : ['bindir=' + join_paths('${prefix}', get_option('runtime_bindir')),
                'glib_genmarshal=' + join_paths('${bindir}', 'glib-genmarshal'),
                'gobject_query=' + join_paths('${bindir}', 'gobject-query'),
                'glib_mkenums=' + join_paths('${bindir}', 'glib-mkenums')],
diff --git a/meson_options.txt b/meson_options.txt
index 1111111..2222222 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -125,3 +125,8 @@ option('multiarch',
        type : 'boolean',
        value : false,
        description : 'Install some helper executables in per-architecture locations')
+
+option('runtime_bindir',
+       type : 'string',
+       value : 'bin',
+       description : 'Alternate bindir value, useful for cross-compilation,')
